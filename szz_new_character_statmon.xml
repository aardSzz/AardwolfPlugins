<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- Saved on Friday, April 19, 2024, 12:00 AM -->
<!-- MuClient version 5.07-pre -->

<!-- Plugin "szz_new_character_info" generated by Plugin Wizard -->
<muclient>
<plugin
   name="szz_new_character_statmon"
   author="Szzilleriel"
   id="58466f80aec9a14d82f79499"
   language="Lua"
   purpose="Replace old character stats/info window"
   save_state="y"
   date_written="2024-04-18 23:59:12"
   requires="5.07"
   version="1.05"
   >
<description trim="y">
<![CDATA[
Replace old character stats/info window with a new one that contains more information.
]]>
</description>
</plugin>

<!-- Plugin Aliases -->
<aliases>
<alias
   enabled="y"
   match="^ncs\s?(\w+)?\s?(@?\w+)?$"
   sequence="100"
   script="New_Character_Statmon"
   regexp="y"
   >
   </alias>
</aliases>

<!--  Script  -->
<script>
<![CDATA[
---@diagnostic disable: undefined-global, lowercase-global
require "gmcphelper"
require "serialize"
require "themed_miniwindows"

NewChar = "empty"
Rstring = "@RCle@G/@RMag@G/@RPal@G/@RPsi@G/@RRan@G/@RThi@G/@RWar@G"
Rdata = "empty"
local options = {
	display = {
		["showname"] = true,
		["showstats"] = true,
		["showinfo"] = true,
		["showworth"] = true,
		["showremorts"] = true,
		["showclass"] = true,
		["showpups"] = true,
		["uservi"] = false,
		["userlayout"] = 0 -- 0 = Default, 1 = Tall Skinny, 2 = Long Skinny
	},
	theme = {
		["maincolor"] = "@G",
		["secondcolor"] = "@W",
		["goldcolor"] = "@Y",
		["remorton"] = "@G",
		["remortonvi"] = "+",
		["remortoff"] = "@R",
		["remortoffvi"] = "-",
		["background"] = nil
	}
}
local merge_task = {}

function merge_to_left(orig, new)
   merge_task[orig] = new

   local left = orig
   while left ~= nil do
      local right = merge_task[left]
      for new_key, new_val in pairs(right) do
         local old_val = left[new_key]
         if old_val == nil then
            left[new_key] = new_val
         else
            local old_type = type(old_val)
            local new_type = type(new_val)
            if (old_type == "table" and new_type == "table") then
               merge_task[old_val] = new_val
            else
               left[new_key] = new_val
            end
         end
      end
      merge_task[left] = nil
      left = next(merge_task)
   end
end

function New_Character_Statmon(name, line, wildcards)
	local arg1, arg2 = nil, nil

	if (wildcards[1]) then arg1 = wildcards[1] end
	if (wildcards[2]) then arg2 = wildcards[2] end

	if (arg1 ~= nil) then
		if (not CheckValidCommand(arg1)) then
			PrintHelp()
			return
		end
	end

	if (arg1:lower() == "showname") then
		if (arg2 ~= nil) then
			if (not CheckValidArgument(arg2)) then
				PrintDisplayHelp()
				return
			else
				if (arg2:lower() == "on" or arg2 == "1" or arg2:lower() == "true") then
					options.display.showname = true
					Note ("SzzStatmon: " .. arg1:lower() .. " set to on")
					SaveNewStatmon()
					return
				end
				if (arg2:lower() == "off" or arg2 == "0" or arg2:lower() == "false") then
					options.display.showname = false
					Note ("SzzStatmon: " .. arg1:lower() .. " set to off")
					SaveNewStatmon()
					return
				end
			end
		end
	end
	if (arg1:lower() == "showstats") then
		if (arg2 ~= nil) then
			if (not CheckValidArgument(arg2)) then
				PrintDisplayHelp()
				return
			else
				if (arg2:lower() == "on" or arg2 == "1" or arg2:lower() == "true") then
					options.display.showstats = true
					Note ("SzzStatmon: " .. arg1:lower() .. " set to on")
					SaveNewStatmon()
					return
				end
				if (arg2:lower() == "off" or arg2 == "0" or arg2:lower() == "false") then
					options.display.showstats = false
					Note ("SzzStatmon: " .. arg1:lower() .. " set to off")
					SaveNewStatmon()
					return
				end
			end
		end
	end
	if (arg1:lower() == "showinfo") then
		if (arg2 ~= nil) then
			if (not CheckValidArgument(arg2)) then
				PrintDisplayHelp()
				return
			else
				if (arg2:lower() == "on" or arg2 == "1" or arg2:lower() == "true") then
					options.display.showinfo = true
					Note ("SzzStatmon: " .. arg1:lower() .. " set to on")
					SaveNewStatmon()
					return
				end
				if (arg2:lower() == "off" or arg2 == "0" or arg2:lower() == "false") then
					options.display.showinfo = false
					Note ("SzzStatmon: " .. arg1:lower() .. " set to off")
					SaveNewStatmon()
					return
				end
			end
		end
	end
	if (arg1:lower() == "showworth") then
		if (arg2 ~= nil) then
			if (not CheckValidArgument(arg2)) then
				PrintDisplayHelp()
				return
			else
				if (arg2:lower() == "on" or arg2 == "1" or arg2:lower() == "true") then
					options.display.showworth = true
					Note ("SzzStatmon: " .. arg1:lower() .. " set to on")
					SaveNewStatmon()
					return
				end
				if (arg2:lower() == "off" or arg2 == "0" or arg2:lower() == "false") then
					options.display.showworth = false
					Note ("SzzStatmon: " .. arg1:lower() .. " set to off")
					SaveNewStatmon()
					return
				end
			end
		end
	end
	if (arg1:lower() == "showremorts") then
		if (arg2 ~= nil) then
			if (not CheckValidArgument(arg2)) then
				PrintDisplayHelp()
				return
			else
				if (arg2:lower() == "on" or arg2 == "1" or arg2:lower() == "true") then
					options.display.showremorts = true
					Note ("SzzStatmon: " .. arg1:lower() .. " set to on")
					SaveNewStatmon()
					return
				end
				if (arg2:lower() == "off" or arg2 == "0" or arg2:lower() == "false") then
					options.display.showremorts = false
					Note ("SzzStatmon: " .. arg1:lower() .. " set to off")
					SaveNewStatmon()
					return
				end
			end
		end
	end
	if (arg1:lower() == "showclass") then
		if (arg2 ~= nil) then
			if (not CheckValidArgument(arg2)) then
				PrintDisplayHelp()
				return
			else
				if (arg2:lower() == "on" or arg2 == "1" or arg2:lower() == "true") then
					options.display.showclass = true
					Note ("SzzStatmon: " .. arg1:lower() .. " set to on")
					SaveNewStatmon()
					return
				end
				if (arg2:lower() == "off" or arg2 == "0" or arg2:lower() == "false") then
					options.display.showclass = false
					Note ("SzzStatmon: " .. arg1:lower() .. " set to off")
					SaveNewStatmon()
					return
				end
			end
		end
	end
	if (arg1:lower() == "showpups") then
		if (arg2 ~= nil) then
			if (not CheckValidArgument(arg2)) then
				PrintDisplayHelp()
				return
			else
				if (arg2:lower() == "on" or arg2 == "1" or arg2:lower() == "true") then
					options.display.showpups = true
					Note ("SzzStatmon: " .. arg1:lower() .. " set to on")
					SaveNewStatmon()
					return
				end
				if (arg2:lower() == "off" or arg2 == "0" or arg2:lower() == "false") then
					options.display.showpups = false
					Note ("SzzStatmon: " .. arg1:lower() .. " set to off")
					SaveNewStatmon()
					return
				end
			end
		end
	end
	if (arg1:lower() == "uservi") then
		if (arg2 ~= nil) then
			if (not CheckValidArgument(arg2)) then
				PrintDisplayHelp()
				return
			else
				if (arg2:lower() == "on" or arg2 == "1" or arg2:lower() == "true") then
					options.display.uservi = true
					Note ("SzzStatmon: " .. arg1:lower() .. " set to on")
					SaveNewStatmon()
					return
				end
				if (arg2:lower() == "off" or arg2 == "0" or arg2:lower() == "false") then
					options.display.usrvi = false
					Note ("SzzStatmon: " .. arg1:lower() .. " set to off")
					SaveNewStatmon()
					return
				end
			end
		end
	end
end

function CheckValidCommand(string)
	local valid = false
	local cmdtbl = {
	    ["showname"] = 1,
	    ["showstats"] = 2,
	    ["showinfo"] = 3,
	    ["showworth"] = 4,
	    ["showremorts"] = 5,
	    ["showclass"] = 6,
		["showpups"] = 7,
		["uservi"] = 8,
		["userlayout"] = 9,
		["maincolor"] = 10,
		["secondcolor"] = 11,
		["goldcolor"] = 12,
		["remorton"] = 13,
		["reomrtonvi"] = 14,
		["remortoff"] = 15,
		["remortoffvi"] = 16,
		["background"] = 17
	}
	if (string ~= nil) then
		for k, _ in pairs(cmdtbl) do
			if (string:lower() == k) then
	        	valid = true
       		end
			if (valid) then
				break
			end
    	end
	end
	if (valid) then
		return true
	else
		return false
	end
end

function CheckValidArgument(string)
	local valid = false
	local argtbl = {
		["on"] = 1,
		["off"] = 2,
		["true"] = 3,
		["false"] = 4,
		["1"] = 5,
		["0"] = 6,
		["2"] = 7
	}
	if (string ~= nil) then
		for k, _ in pairs(argtbl) do
			if (string:lower() == k) then
	        	valid = true
       		end
			if (valid) then
				break
			end
    	end
	end
	if (valid) then
		return true
	else
		return false
	end
end

function PrintHelp()
	Note("szz_new_statmon by Szzilleriel")
	Note("")
	Note("ncs [showname/showstats/showinfo/showworth/showremorts/showclass/showpups] [on/off/1/0/true/false]")
	-- Note("ncs [maincolor/secondcolor/goldcolor/remorton/remortoff/background] [mud_color_code] - ie: @G or @x101")
	-- Note("ncs [uservi] [on/off/1/0/true/false] - For visually impaired")
	-- Note("ncs [remortonvi/remortoffvi] [symbol] - ie: ncs remorton + or ncs remortoff -")
end

function PrintDisplayHelp()
	Note("Syntax: ncs [showname/showstats/showinfo/showworth/showremorts/showclass/showpups] [on/off/1/0/true/false]")
end

function New_Character_Update()
	NewChar = gmcp("char")
	if (not options.display.showname) then
		window_builder = "\n"
	else
		window_builder = "\n\n"
	end

	if (options.display.showstats) then
		window_builder = window_builder .. "@GStr   : " .. string.format("[@W%3d@G/@W%3d@G]", NewChar.stats.str, NewChar.maxstats.maxstr) .. "    Hp    : " .. string.format("[@W%6d@G/@W%6d@G]", NewChar.vitals.hp, NewChar.maxstats.maxhp) .. "\n"
		window_builder = window_builder .. "Int   : " .. string.format("[@W%3d@G/@W%3d@G]", NewChar.stats.int, NewChar.maxstats.maxint) .. "    Ma    : " .. string.format("[@W%6d@G/@W%6d@G]", NewChar.vitals.mana, NewChar.maxstats.maxmana) .. "\n"
		window_builder = window_builder .. "Wis   : " .. string.format("[@W%3d@G/@W%3d@G]", NewChar.stats.wis, NewChar.maxstats.maxwis) .. "    Mv    : " .. string.format("[@W%6d@G/@W%6d@G]", NewChar.vitals.moves, NewChar.maxstats.maxmoves) .. "\n"
		window_builder = window_builder .. "Dex   : " .. string.format("[@W%3d@G/@W%3d@G]", NewChar.stats.dex, NewChar.maxstats.maxdex) .. "\n"
		window_builder = window_builder .. "Con   : " .. string.format("[@W%3d@G/@W%3d@G]", NewChar.stats.con, NewChar.maxstats.maxcon) .. "    HR    : " .. string.format("[@W%5d@G]", NewChar.stats.hr) .. "\n"
		window_builder = window_builder .. "Luk   : " .. string.format("[@W%3d@G/@W%3d@G]", NewChar.stats.luck, NewChar.maxstats.maxluck) .. "    DR    : " .. string.format("[@W%5d@G]", NewChar.stats.dr) .. "\n"
		window_builder = window_builder .. "\n"
	end

	if (options.display.showinfo) then
		window_builder = window_builder .. "TNL   : " .. string.format("[@W%5d@G]", NewChar.status.tnl) .. "      Align : " .. string.format("[@W%5d@G]", NewChar.status.align) .. "\n"
		window_builder = window_builder .. "Train : " .. string.format("[@W%5d@G]", NewChar.worth.trains) .. "      Prac  : " .. string.format("[@W%5d@G]", NewChar.worth.pracs) .. "\n"
    	window_builder = window_builder .. "\n"
	end

	if (options.display.showworth) then
		window_builder = window_builder .. "QP    : " .. string.format("[@W%6d@G]", NewChar.worth.qp) .. "     TP    : " .. string.format("[@W%5d@G]", NewChar.worth.tp) .. "\n"
		window_builder = window_builder .. "            Gold : " .. string.format("[@Y%12d@G]", NewChar.worth.gold) .. "\n"
		window_builder = window_builder .. "\n"
	end

	if (options.display.showremorts) then
		window_builder = window_builder .. "                   Remorts\n"
		-- Do not hammer cpus with gsub replacements except when needed
		if not string.find(Rdata, NewChar.base.classes) then
			Rdata = NewChar.base.classes
			processremorts()
		end
		window_builder = window_builder .. "         " .. Rstring .. "\n"
		window_builder = window_builder .. "\n"
	end

	if (options.display.showclass) then
		window_builder = window_builder .. "Pri   : " .. string.format("[@W%10s@G]", NewChar.base.class) .. "  Sub    : " .. string.format("[@W%12s@G]", NewChar.base.subclass) .. "\n"
	end

	if (options.display.showpups) then
		window_builder = window_builder .. "Pup   : " .. string.format("[@W%10d@G]", NewChar.base.pups) .. "  Totpup : " .. string.format("[@W%12d@G]", NewChar.base.totpups)
	end

    draw_window(window_builder)
	if (not options.display.showname) then
		window:dress_window("Level:@W " .. NewChar.base.level .. "@G [@WT+" .. NewChar.base.tier .. "@G/@WR+" .. string.len(NewChar.base.classes) .. "@G]")
	else
		window:dress_window("@R" .. NewChar.base.pretitle .. NewChar.base.name .. "@G\n Level:@W " .. NewChar.base.level .. "@G [@WT+" .. NewChar.base.tier .. "@G/@WR+" .. string.len(NewChar.base.classes) .. "@G]")
	end
end

function processremorts()
	if string.find(Rdata, "0") then
		Rstring = string.gsub(Rstring, "@RMag", "@GMag")
	else
		Rstring = string.gsub(Rstring, "@GMag", "@RMag")
	end
	if string.find(Rdata, "1") then
		Rstring = string.gsub(Rstring, "@RCle", "@GCle")
	else
		Rstring = string.gsub(Rstring, "@GCle", "@RCle")
	end
	if string.find(Rdata, "2") then
		Rstring = string.gsub(Rstring, "@RThi", "@GThi")
	else
		Rstring = string.gsub(Rstring, "@GThi", "@RThi")
	end
	if string.find(Rdata, "3") then
		Rstring = string.gsub(Rstring, "@RWar", "@GWar")
	else
		Rstring = string.gsub(Rstring, "@GWar", "@RWar")
	end
	if string.find(Rdata, "4") then
		Rstring = string.gsub(Rstring, "@RRan", "@GRan")
	else
		Rstring = string.gsub(Rstring, "@GRan", "@RRan")
	end
	if string.find(Rdata, "5") then
		Rstring = string.gsub(Rstring, "@RPal", "@GPal")
	else
		Rstring = string.gsub(Rstring, "@GPal", "@RPal")
	end
	if string.find(Rdata, "6") then
		Rstring = string.gsub(Rstring, "@RPsi", "@GPsi")
	else
		Rstring = string.gsub(Rstring, "@GPsi", "@RPsi")
	end
end

function OnPluginBroadcast (msg, id, name, text)
    if (id == '3e7dedbe37e44942dd46d264') then
		if (text == "char.base") then
			local cbase = gmcp("char.base")
			merge_to_left(NewChar, cbase)
		end
		if (text == "char.maxstats") then
			local maxstats = gmcp("char.maxstats")
			merge_to_left(NewChar, maxstats)
		end
		if (text == "char.stats") then
			local cstats = gmcp("char.stats")
			merge_to_left(NewChar, cstats)
		end
		if (text == "char.status") then
			local cstatus = gmcp("char.status")
			merge_to_left(NewChar, cstatus)
		end
		if (text == "char.vitals") then
			local vstats = gmcp("char.vitals")
			merge_to_left(NewChar, vstats)
		end
		if (text == "char.worth") then
			local worth = gmcp("char.worth")
			merge_to_left(NewChar, worth)
		end
		New_Character_Update()
    end
 end

function SaveNewStatmon()
   SetVariable("szzNewStatmon", serialize.save_simple(options))
   SaveState()
end

 function OnPluginEnable()
	if GetVariable("szzNewStatmon") then
    	options = assert(loadstring("return " .. GetVariable("szzNewStatmon")))()
	end
	New_Character_Update()
end

function OnPluginInstall()
	if GetVariable("szzNewStatmon") then
    	options = assert(loadstring("return " .. GetVariable("szzNewStatmon")))()
	end
	New_Character_Update()
	ColourNote("white", "", "[szz_new_character_statmon] Installed v" .. GetPluginInfo(GetPluginID(), 19) .. "b")
end

function OnPluginDisable()
	SaveNewStatmon()
	if window then
		window:delete()
		window = nil
	end
end

function OnPluginClose()
	SaveNewStatmon()
	if window then
		window:delete()
		window = nil
	end
end

function draw_window(string)
	if not window then
		window = ThemedTextWindow(
			"58466f80aec9a14d82f79499",                    -- string, required, a unique identifier for this window
			0, -- integer, required, where to put it if the player hasn't moved it
			0,  -- integer, required, where to put it if the player hasn't moved it
			330,         -- integer, required, how big to make it if the player hasn't moved it
			295,        -- integer, required, how big to make it if the player hasn't moved it
			nil,                 -- string, optional (nil means no titlebar), text to put into the title
			nil,       -- string, optional (default is "center"), "left", "center", or "right"
			false,          -- boolean, optional (default is false), true adds a close button in the top left
			true,            -- boolean, optional (default is false), make the window resizeable
			false,       -- boolean, optional (default is false), add a scrollbar and mousewheel scrolling
			true,       -- boolean, optional (default is false), make the text selectable
			true,         -- boolean, optional (default is false), make the text copyable via right-click
			false,        -- boolean, optional (default is false), turn detected URLs into clickable links
			true,              -- boolean, optional (default is false), automatically wrap text lines that are too wide
			"Dina",       -- string, optional (default is Dina), override the title font name
			8,       -- integer, optional (default is 10), override the title font size
			"Dina",        -- string, optional (default is Dina), override the body text font name
			8,        -- integer, optional (default is 10), override the body text font size
			nil,        -- integer, optional (default is 1000), maximum number of text lines to keep
			5           -- integer, optional (default is 5 pixels), space between text and miniwindow frame
		)
	end

	window:clear(false)
	window:add_text(string, true)
end
]]>
</script>

<!--  Plugin help  -->
<aliases>
  <alias
   script="OnHelp"
   match="szz_new_character_statmon:help"
   enabled="y"
  >
  </alias>
</aliases>

<script>
<![CDATA[
function OnHelp ()
  world.Note (world.GetPluginInfo (world.GetPluginID (), 3))
end
]]>
</script> 

</muclient>
